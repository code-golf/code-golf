[Bash]
size    = '1.15 MiB'
version = '5.0.18'
website = '//www.gnu.org/software/bash/'

[Brainfuck]
size    = '1.59 MiB'
version = '1.0.0'
website = '//github.com/code-golf/code-golf/tree/master/langs/brainfuck/'

[C]
size    = '1.58 MiB'
version = 'Tiny C Compiler 0.9.27'
website = '//bellard.org/tcc/'
example = '''
int main(int argc, char* argv[]) {
  //print hello world
  puts("Hello World!");
  // loop over 0-10 and print them
  for (int i = 0; i <= 10; i++)
    printf("%d\n", i);
  // loop over all arguments and print them
  for (int i = 1; i <= argc; i++)
    puts(argv[i]);
}
'''

['C#']
size    = '141 MiB'
version = 'C# 8.0 on .NET Core 3.1.7'
website = '//docs.microsoft.com/dotnet/csharp/'

[COBOL]
size    = '6.12 MiB'
version = 'GnuCOBOL 2.2.0'
website = '//www.gnu.org/software/gnucobol/'

['F#']
size    = '108 MiB'
version = 'F# 4.7 on .NET Core 3.1.7'
website = '//fsharp.org'

[Fortran]
size    = '410 MiB'
version = 'GNU Fortran 9.3.0'
website = '//gcc.gnu.org/fortran/'

[Go]
size    = '110 MiB'
version = '1.15.3'
website = '//go.dev'

[Haskell]
size    = '332 MiB'
version = 'Glasgow Haskell Compiler 8.8.4'
website = '//www.haskell.org/ghc/'

[J]
size    = '3.3 MiB'
version = '9.01.01'
website = '//www.jsoftware.com'

[Java]
size    = '67.2 MiB'
version = '14.0.2'
website = '//openjdk.java.net'

[JavaScript]
size    = '21.1 MiB'
version = 'V8 8.6.395.17'
website = '//v8.dev'
example = '''
// print hello world
print("Hello World!");
// loop over 0 to 10 and print
for (let i = 0; i<=10; i++)
  print(i);
// loop over arguments and print
for (let arg of arguments)
  print(arg);
'''

[Julia]
size    = '284 MiB'
version = '1.5.2'
website = '//julialang.org'

[Lisp]
size    = '35.4 MiB'
version = 'GNU CLISP 2.49.92'
website = '//clisp.sourceforge.io'

[Lua]
size    = '314 KiB'
version = '5.4.1'
website = '//www.lua.org'

[Nim]
size    = '22.3 MiB'
version = '1.4.0'
website = '//nim-lang.org'

[PHP]
size    = '10.5 MiB'
version = '7.4.11'
website = '//www.php.net'

[Perl]
size    = '3.44 MiB'
version = '5.32.0'
website = '//www.perl.org'

[PowerShell]
size    = '179 MiB'
version = 'PowerShell 7.0.3 on .NET Core 3.1.7'
website = '//docs.microsoft.com/powershell/scripting/overview'

[Python]
size    = '206 MiB'
version = '3.9.0'
website = '//www.python.org'
example = '''
# Printing.
print('Hello, World!')

# Looping.
for i in range(1,11): print(i)

# Accessing arguments.
import sys
for arg in sys.argv[1:]: print(arg)
'''

[Raku]
size    = '48.5 MiB'
version = 'Rakudo 2020.09 on MoarVM 2020.09 implementing Raku 6.d'
website = '//raku.org'

[Ruby]
size    = '14.3 MiB'
version = '2.7.2'
website = '//www.ruby-lang.org'
example = '''
# Printing.
puts 'Hello World!'

# Looping.
(1..10).each do |i|
 puts i
end

# Accessing arguments.
ARGV.each do|arg|
  puts arg
end
'''

[Rust]
size    = '588 MiB'
version = '1.47.0'
website = '//www.rust-lang.org'

[SQL]
size    = '1.02 MiB'
version = '3.33.0'
website = '//sqlite.org/index.html'

[Swift]
size    = '852 MiB'
version = '5.3'
website = '//swift.org'

[Zig]
size    = '242 MiB'
version = '0.6.0'
website = '//ziglang.org'
