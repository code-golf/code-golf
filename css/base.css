* {
    box-sizing: border-box;
    margin: 0;
}

[data-tooltip] { position: relative }

[data-tooltip]:before, [data-tooltip]:after {
    display: none;
    left: 50%;
    position: absolute;
    transform: translate(-50%, -.25rem);
}

/* Tooltip Arrow */
[data-tooltip]:before {
    border: .5rem solid transparent;
    border-bottom: 0;
    border-top-color: var(--color);
    bottom: 100%;
    content: '';
    z-index: 100;
}

/* Tooltip Content */
[data-tooltip]:after {
    background: var(--color);
    border-radius: .25rem;
    bottom: calc(100% + .5rem);
    color: var(--background);
    content: attr(data-tooltip);
    max-width: 21em;
    padding: 0 .5rem;
    text-align: center;
    z-index: 99;
}

[data-tooltip][data-wide-tooltip]:after { min-width: 16em }

[data-tooltip]:hover:before, [data-tooltip]:hover:after { display: block }

a { color: var(--link-color) }

a:not(:hover) { text-decoration: none }
a:not([href]) { cursor: auto }

blockquote {
    margin-left: 1rem;
    white-space: pre;
}

body {
    background: var(--background);
    color: var(--color);
    display: flex;
    flex-direction: column;
    font: 16px emoji, system-ui, -apple-system, sans-serif;
    min-height: 100vh;
    overflow-x: hidden;
}

body, footer nav, body > header nav, #popups {
    margin: auto;
    max-width: 1280px;
}

body > svg, .hide { display: none }

details .grid { padding-top: 1rem }

footer {
    background: var(--light-grey);
    border-top: 1px solid var(--color);
    margin: 0 calc(50% - 50vw);
}

footer nav {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: .5rem;
    justify-content: center;
    padding: .5rem;
}

h1 { font-size: 1.75rem }
h2 { font-size: 1.50rem }
h3 { font-size: 1.25rem }

body > header {
    background: var(--color);
    margin: 0 calc(50% - 50vw);
    overflow: auto;
    position: sticky;
    top: 0;
    z-index: 7; /* Codemirror uses up to 6 */
}

body > header a {
    align-items: center;
    display: flex;
    fill: var(--background);
    height: 2.75rem;
    justify-content: center;
    min-width: 2.75rem;
}

body > header a:hover,
body > header a.on {
    background: var(--background);
    color: var(--color);
    fill: var(--color);
}

body > header [title=Profile] {
    color: var(--background);
    display: grid;
    font-size: .75rem;
    font-variant: tabular-nums;
    font-weight: bold;
    gap: 0 .25rem;
    grid-template-columns: auto 1fr auto;
    min-width: auto;
    padding: .25rem .5rem;
    text-decoration: none;
}

body > header [title=Profile] img {
    border-radius: 50%;
    grid-row: span 2;
    height: 1.75rem;
    margin-left: .375rem;
    width: 1.75rem;
}

body > header [title=Profile] svg {
    height: .875rem;
    width: .875rem;
}

body > header nav { display: flex }

body > header svg {
    height: 1.5rem;
    width: 1.5rem;
}

dialog {
    background: var(--background);
    border: 1px solid var(--color);
    color: var(--color);
    inset: 50%;
    max-width: calc(100vw - 2rem);
    padding: 0;
    position: fixed;
    transform: translate(-50%, -50%);
    width: 30rem;
}

dialog:not([open]) { display: none }

dialog::backdrop, dialog + .backdrop {
    backdrop-filter: blur(.25rem);
    background: rgba(0, 0, 0, .1);
    inset: 0;
    position: fixed;
}

dialog form {
    display: grid;
    gap: 1rem;
    padding: 1rem;
}

form menu {
    display: flex;
    flex-direction: row-reverse;
    gap: 1rem;
    justify-content: space-between;
    padding: 0;
}

input:not([type]) { background: var(--background) }

input:not([type]), select {
    border-radius: .25rem;
    border: 1px solid var(--grey);
    color: var(--color);
    font: inherit;
    line-height: 1.5;
    padding: .375rem .5rem;
    width: 100%;
}

main {
    align-content: start;
    display: grid;
    flex: 1;
    gap: 1rem;
    grid-template-columns: minmax(0, 1fr);
    padding: 1rem;
}

nav > :empty { flex: 1 }

select {
    -webkit-appearance: none;
    appearance: none;
    padding-right: .75rem;
}

summary {
    background: var(--summary-background);
    border: 1px solid var(--color);
    color: var(--summary-color);
    cursor: pointer;
    line-height: 2rem;
    padding: 0 .5rem;
}

summary:focus { outline: none }

summary:hover {
    background: inherit !important;
    color: inherit !important;
}

sup {
    font-size: .75em;
    line-height: 0;
}

table {
    border-spacing: 0;
    font-variant: tabular-nums;
}

tbody > :nth-child(even) { background: var(--light-grey) }

tbody th { text-align: right }

tbody tr > :first-child { border-left: 1px solid var(--color) }
tbody tr > :last-child { border-right: 1px solid var(--color) }

td, th {
    border-bottom: 1px solid var(--color);
    line-height: 2rem;
    padding: 0 .5rem;
    text-align: left;
}

td > a {
    align-items: center;
    display: flex;
    text-decoration: none;
}

td.right > a { justify-content: right }

td > a > img {
    border-radius: 50%;
    flex-shrink: 0;
    height: 1.5rem;
    margin-right: .5rem;
    width: 1.5rem;
}

td > a > span {
    overflow: hidden;
    text-overflow: ellipsis;
}

td > a > span:nth-of-type(1) { flex: 1 }

td > a:hover > span:first-of-type { text-decoration: underline }

tfoot td { border: 0 }

thead th {
    background: var(--background);
    border-bottom-width: 2px;
}

.alert, .info, .success {
    border: 1px solid var(--color);
    display: grid;
    gap: .5rem;
    margin: 1rem 1rem 0;
    padding: 1rem 1rem 1rem 3rem;
    position: relative;
}

.alert svg, .info svg, .success svg {
    fill: var(--color);
    left: .75rem;
    position: absolute;
    top: calc(50% - .75rem);
    width: 1.5rem;
}

.alert ul, .info ul, .success ul {
    max-height: 30vh;
    overflow-y: auto;
}

.alert   { background: var(--light-yellow) }
.info    { background: var(--light-blue) }
.success { background: var(--light-green) }

.btn {
    align-items: center;
    border: solid 1px var(--color);
    color: var(--color);
    display: flex;
    font-size: 1rem;
    font-weight: bold;
    gap: .5rem;
    padding: .5rem;
    user-select: none;
    white-space: nowrap;
}

.btn[disabled] { opacity: .5 }

.btn:not([disabled]):hover {
    background: none;
    color: var(--color);
    cursor: pointer;
    text-decoration: none;
}

.btn svg { height: 1rem }

.card {
    align-items: end;
    border: 2px solid var(--color);
    color: var(--color);
    display: grid;
    gap: .5rem;
    grid-template: min-content / 1fr min-content;
    height: 100%;
    padding: .5rem;
    text-decoration: none;
    white-space: nowrap;
}

.card:hover { background: none !important }

.card h2 {
    font-size: 1.25rem;
    grid-column: 1 / -1;
    line-height: 1.25;
    overflow: hidden;
    text-overflow: ellipsis;
}

.card p {
    align-self: start;
    white-space: normal;
}

.card svg {
    fill: var(--color);
    height: 1rem;
    width: 1rem;
}

.color:nth-of-type(6n+1), .red    { background: var(--red)    }
.color:nth-of-type(6n+2), .orange { background: var(--orange) }
.color:nth-of-type(6n+3), .yellow { background: var(--yellow) }
.color:nth-of-type(6n+4), .green  { background: var(--green)  }
.color:nth-of-type(6n+5), .blue   { background: var(--blue)   }
.color:nth-of-type(6n+6), .purple { background: var(--purple) }

.flag {
    margin-left: .5rem;
    overflow: visible;
    text-shadow: var(--color) 1px 1px 2px;
}

.grey { background: var(--light-grey) }

.grid {
    align-items: center;
    display: grid;
    gap: 1rem;
}

.headless { border-top: 2px solid var(--color) }

.hide { display: none !important }

.me { background: var(--light-green) !important }

[class^=nowrap-] { white-space: nowrap }

.nowrap-first  td:nth-child(1),
.nowrap-second td:nth-child(2) {
    max-width: 0;
    width: 100%;
}

.nowrap-first-second td:nth-child(1),
.nowrap-first-second td:nth-child(2) {
    max-width: 0;
    width: 50%;
}

.right { text-align: right }

.span { grid-column: 1 / -1 }

.sticky th {
    position: sticky;
    top: 2.75rem;
    z-index: 1;
}

/* Stick headers below tabs if we have them */
nav + main .sticky th { top: calc(5.75rem + 1px) }

.tabs {
    display: flex;
    flex-wrap: wrap;
}

/* Tabs outside <main> should be bold, sticky, & underlined. */
body > .tabs {
    background: var(--background);
    border-bottom: 2px solid var(--color);
    font-weight: bold;
    padding: 1rem 1rem 0;
    position: sticky;
    top: 2.75rem;
    z-index: 2;
}

body > .tabs a {
    margin-bottom: -2px;
    padding: calc(.5rem - 1px) .5rem;
}

.tabs a {
    color: var(--color);
    padding: .375rem .5rem;
}

/* TODO .tabs a:is(.on, :hover, :not([href])) */
.tabs .on, .tabs a:hover, .tabs a:not([href]) {
    background: var(--color) !important;
    color: var(--background);
    text-decoration: none;
}

.text-red { color: var(--red-text) }

/* Hacky, remove once we no longer use links inside <details>. */
details.tabs   { display: initial }
details.tabs a { display: inline-block }

#alert-pool {
    flex: 1;
    margin-right: 0.5em;
}

#error h1 { text-align: center }

#ideas, #index { grid-template-columns: repeat(auto-fit, minmax(230px, 1fr)) }

#index > .grid {
    border: 2px solid var(--color);
    padding: 1rem;
}

#me {
    position: relative;
    top: -50vh;
}

#popups {
    display: grid;
    gap: .5rem;
    grid-template-columns: 1fr auto;
    padding: .5rem;
    pointer-events: none;
    position: fixed;
    top: 2.75rem;
    width: 100%;
}

#popups div {
    animation: 1s fade .5s forwards, 1s fade 7s reverse forwards;
    background: var(--color);
    box-shadow: 0 0 1rem #07b;
    color: var(--background);
    display: default;
    gap: .25rem .5rem;
    grid-column: 2;
    grid-template-columns: auto 1fr;
    opacity: 0;
    pointer-events: initial;
    padding: .5rem;
    white-space: nowrap;
}

#popups h3 { grid-column: span 2 }

@keyframes fade {
    0%   { opacity: 0; margin-top: -4rem }
    100% { opacity: 1; margin-top: 0 }
}

@media (max-width: 34rem) { .wide { display: none !important } }
