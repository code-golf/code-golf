/**
 * NOTE: These includes are hardcoded in render.go, not inlined automatically
 * from comments like the *.js `include`s
 */

/* include hole-diff.css */
/* include vendor/goldenlayout-base.css */

pre {
    font-family: emoji, 'Source Code Pro', monospace;
    line-height: 1.2;
    overflow: auto hidden;
}

.qr-span span {
    color: var(--grey);
    font-family: emoji, 'Source Code Pro', monospace;
}

.readonly-output {
    flex: 1;
    font-family: emoji, 'Source Code Pro', monospace;
    font-variant-ligatures: none;
    line-height: 1;
    padding: .375rem;
    overflow: auto;
}

.readonly-output:empty::after {
    content: "(Empty)";
}

canvas {
    border: 1px solid var(--color);
    image-rendering: crisp-edges;
    width: 50%;
}

main .info {
    display: block;
    margin: 0;
    padding: .5rem;
}

section header {
    align-items: center;
    display: flex;
    height: 2.2rem;
    justify-content: space-between;
    padding-right: .5rem;
    padding-left: .5rem;
}

.cm-editor { height: 100% }

.text-red { color: var(--red-text) }

#err, #exp, #out { white-space: pre }

#arg {
    align-content: flex-start;
    align-items: flex-start;
    display: flex;
    flex-wrap: wrap;
    gap: .375rem;
}

#arg span {
    background: var(--arg-background);
    border-radius: .5rem;
    font-family: emoji, 'Source Code Pro', monospace;
    padding: .25rem .375rem;
    white-space: pre;
}

#arrows code { font-size: 1.5rem }
#arrows td   { font-family: emoji, 'Source Code Pro', monospace }
#arrows td:first-child { white-space: pre }
#arrows td:last-child  { width: 100% }

#authors {
    display: flex;
    flex-wrap: wrap;
    font-size: 1rem;
    font-weight: normal;
    gap: .25rem 0;
    padding-left: 1rem;
}

#authors a {
    display: flex;
    gap: .25rem;
    margin-left: .25rem;
}

#authors img {
    border-radius: 50%;
    height: 1.25rem;
    width: 1.25rem;
}

#chars {
    border-bottom: 1px solid var(--color);
    font-weight: bold;
    line-height: 2rem;
}

#editor-section {
    height: 100%;
}

#editor {
    /* Button = 1rem (contents) + 2*0.5 rem (padding) + 2px (border) */
    height: calc(100% - (2rem + 2px));
    grid-row: span 2;
    overflow-x: hidden;
}

#emojify {
    display: grid;
    gap: .5rem;
    grid-template-columns: repeat(auto-fill, minmax(4.5rem, 1fr));
}

#emojify div {
    align-items: center;
    background: var(--light-grey);
    border: 1px solid var(--color);
    display: flex;
    justify-content: space-between;
    padding: .25rem .4rem;
}

main > header {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: space-between;
}

main > header a { white-space: nowrap }

main > header nav {
    display: flex;
    flex-wrap: wrap;
    gap: .5rem;
}

#rankingsView {
    background: var(--color);
    border: 1px solid var(--color);
    border-top: 0;
    gap: 1px;
}

#rankingsView a {
    align-items: center;
    background: var(--light-grey);
    display: flex;
    flex: 1;
    gap: .5rem;
    justify-content: center;
}

#rankingsView svg {
    height: 1rem;
    width: 1rem;
}

#run {
    align-items: center;
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
}

#run span {
    flex: 1;
    text-align: right;
}

#scores {
    width: 100%;
    height: 100%;
}

/* Shrink the padding compared to a normal table */
#scores td               { padding: 0 .25rem }
#scores td:first-child { padding-left: .5rem }
#scores td:last-child { padding-right: .5rem }

#scores td:nth-child(n+3) { text-align: right }

#scores .bytes td:nth-child(4),
#scores .chars td:nth-child(3) { color: var(--grey) }

#scores [data-tooltip]:after {
    /* Override tooltip transform to avoid right-overflow */
    transform: translate(-100%, -0.25rem);
    left: 110%;
    /* Override tooltip transform to avoid top-overflow */
    bottom: 100%;
}

#scores [data-tooltip]:before {
    bottom: calc(100% - 0.5rem);
}

/* Remove left and right borders from base.css */
#scores tbody td {
    border-left: 0;
    border-right: 0;
}

#status {
    align-items: center;
    display: grid;
    gap: 1rem;
    grid-template-columns: 1fr auto;
    padding: 1rem;
}

#strokes { font-weight: bold }

/* TODO Generalise the hole mapping table CSS, lose the specific IDs. */
                            #colors, #morse, #states { columns: 4 }
@media (max-width: 54rem) { #colors, #morse, #states { columns: 2 } }
@media (max-width: 30rem) { #colors, #morse, #states { columns: 1 } }

#colors svg {
    align-self: center;
    border: 1px solid var(--color);
    height: 1rem;
    margin-right: .5rem;
    width: 1rem;
}

#colors table, #morse table, #states table { break-inside: avoid-column }
thead { user-select: none }

#colors td:first-child { display: flex }

#colors td:last-child {
    text-align-last: justify;
    text-justify: inter-character;
}

#colors th:first-child,
#morse  td:last-child,
#states td:first-child {
    width: 100%;
}

@media (max-width: 34rem) {
    section, #status { grid-template-columns: 1fr }

    section header { padding: 0 }

    #thirdParty:empty { display: none }
}

#golden-container {
    width: 100%;
    position: relative;
    /* Prevent overflow from maximized panels */
    overflow: hidden;
}

#golden-container > .lm_root {
    /* Don't contribute to #golden-container's sizing to allow auto resizing */
    position: absolute;
}

main {
    grid-template-rows: repeat(3, max-content) 1fr
}

#info-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

#solutionPickerPool {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

#pool {
    display: flex;
    flex-wrap: wrap;
    gap: 0.375rem;
}

#pool span::after {
    content: "+";
    padding-left: 0.25rem;
}

#pool span {
    background: var(--light-grey);
    padding: 0.25rem 0.375rem;
}
