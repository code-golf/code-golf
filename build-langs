#!/bin/bash -e

if [ -z "${BASH_VERSINFO}" ] \
        || [ -z "${BASH_VERSINFO[0]}" ] \
        || [ ${BASH_VERSINFO[0]} -lt 4 ]; then
    echo "This script requires Bash version >= 4"
    exit 1
fi

declare -A urls=(
    ["Bash"]="//www.gnu.org/software/bash/"
    ["Brainfuck"]="//github.com/code-golf/code-golf/tree/master/langs/brainfuck/"
    ["C"]="//bellard.org/tcc/"
    ["Go"]="//golang.org"
    ["Haskell"]="//www.haskell.org/ghc/"
    ["J"]="http://jsoftware.com"
    ["JavaScript"]="//v8.dev"
    ["Julia"]="//julialang.org"
    ["Lisp"]="//clisp.sourceforge.io"
    ["Lua"]="//www.lua.org"
    ["Nim"]="//nim-lang.org"
    ["Perl"]="//www.perl.org"
    ["PHP"]="//secure.php.net"
    ["Python"]="//www.python.org"
    ["Raku"]="//raku.org"
    ["Ruby"]="//www.ruby-lang.org"
    ["Rust"]="//www.rust-lang.org"
    ["Swift"]="//swift.org"
)

IFS=$'\n'
sorted_names=( $(sort --ignore-case <<<"${!urls[*]}") )
unset IFS

docker pull alpine:3.11

cd langs

for name in "${sorted_names[@]}"; do
    lang=${name,,}      # lowercase

    # Start with a clean rootfs.
    rm -rf $lang/rootfs
    mkdir $lang/rootfs

    img=codegolf/lang-$lang

    # Tag the builder stage so "docker system prune" won't remove it.
    docker build --target builder -t $img-builder $lang

    docker build -t $img $lang

    if [ $lang = j ]; then
        ver=`echo echo JLIB | docker run --rm --tmpfs /tmp -i $img`
    elif [ $lang = nim ]; then
        ver=`echo echo NimVersion | docker run --rm --tmpfs /tmp -i $img`
    else
        ver=`docker run --rm $img`
    fi

    # Remove some crap from version strings.
    ver=${ver#JavaScript-C}
    ver=${ver#Lua }
    ver=${ver#Swift }
    ver=${ver#The Glorious }
    ver=${ver#This is }
    ver=${ver#rustc }
    ver=${ver/go version go/}
    ver=${ver/ linux\/amd64/}
    ver=${ver/ation/er}
    ver=${ver/built /}
    ver=${ver/System, /}
    ver=${ver/tcc /Tiny C Compiler }
    ver=${ver//$'\n'/ }
    ver=${ver//version /}
    ver=${ver%.}
    ver=${ver% d8> }
    ver=${ver%  Copyright (C) 1994-2019 Lua.org, PUC-Rio}
    ver=${ver/ (*/}

    html+="+
        \"<tr><th class=$lang>$name<td>$ver<td class=wide><a href=${urls[$name]}>website</a>\""

    id=`docker create $img`

    docker export $id | tar -C $lang/rootfs -xf -

    docker rm $id >/dev/null

    # Remove the crap we gained from creating the container, this is hacky.
    rm -fr $lang/rootfs/{dev,proc,sys,tmp}

    # Nim needs /etc/nim/nim.cfg to exist.
    if [ $lang != nim ]; then
        rm -fr $lang/rootfs/etc
    fi

    mkdir -p $lang/rootfs/{proc,tmp}

    docker push $img
done

echo "package routes

const versionTable = \"\"$html" > ../routes/versions.go

gofmt -s -w ../routes/versions.go
