#!/bin/bash -e

declare -A urls=(
    ["bash"]="//www.gnu.org/software/bash/"
    ["brainfuck"]="//github.com/JRaspass/code-golf/tree/master/containers/brainfuck/"
    ["c"]="//bellard.org/tcc/"
    ["haskell"]="//www.haskell.org/ghc/"
    ["j"]="http://jsoftware.com"
    ["javascript"]="//v8.dev"
    ["julia"]="//julialang.org"
    ["lisp"]="//clisp.sourceforge.io"
    ["lua"]="//www.lua.org"
    ["perl"]="//www.perl.org"
    ["perl6"]="//perl6.org"
    ["php"]="//secure.php.net"
    ["python"]="//www.python.org"
    ["ruby"]="//www.ruby-lang.org"
)

docker pull alpine:edge

cd containers

for name in Bash Brainfuck C Haskell J JavaScript Julia Lisp Lua Perl Perl\ 6 PHP Python Ruby; do
    lang=${name,,}      # lowercase
    lang=${lang// /}    # trim space

    # Start with a clean rootfs.
    rm -rf $lang/rootfs
    mkdir $lang/rootfs

    # Tag the builder stage so "docker system prune" won't remove it.
    if [ $lang != haskell ]; then
        docker build --target builder -t quay.io/jraspass/$lang-builder $lang
    fi

    docker build -t code-golf-$lang $lang

    if [ $lang = j ]; then
        ver=`echo echo JLIB | docker run --rm --tmpfs /tmp -i code-golf-j`
    else
        ver=`docker run --rm code-golf-$lang`
    fi

    # Remove some crap from version strings.
    ver=${ver#Lua }
    ver=${ver#The Glorious }
    ver=${ver#This is }
    ver=${ver#JavaScript-C}
    ver=${ver/ation/er}
    ver=${ver/built /}
    ver=${ver/System, /}
    ver=${ver/tcc /Tiny C Compiler }
    ver=${ver//$'\n'/ }
    ver=${ver//version /}
    ver=${ver%.}
    ver=${ver% d8> }
    ver=${ver%  Copyright (C) 1994-2018 Lua.org, PUC-Rio}
    ver=${ver/ (*/}

    html+="<tr><th class=$lang>$name<td>$ver<td><a href=${urls[$lang]}></a>"

    id=`docker run -d code-golf-$lang`

    docker export $id | tar -C $lang/rootfs -xf -

    docker rm -f $id

    # Remove the crap we gained from running the container, this is hacky.
    rm -fr $lang/rootfs/{.dockerenv,dev,etc,proc,sys,tmp}

    mkdir $lang/rootfs/{old-root,proc,tmp}

    # Lisp & Python need UIDs to actually resolve, madness!
    if [ $lang = lisp -o $lang = python ]; then
        mkdir $lang/rootfs/etc

        echo nobody:x:99:99::/: > $lang/rootfs/etc/passwd
    fi
done

echo "package routes

const versionTable = \"$html\"" > ../routes/versions.go
