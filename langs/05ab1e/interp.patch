--- /lib/interp/interpreter.ex
+++ /lib/interp/interpreter.ex
@@ -58,7 +58,7 @@
     def interp_string(string, stack, environment) do
         dissected_string = String.split(string, "Ã¿")

-        {elements, stack, environment} = Enum.reduce(Enum.slice(dissected_string, 0..-2), {[], stack, environment}, 
+        {elements, stack, environment} = Enum.reduce(Enum.slice(dissected_string, 0..-2//1), {[], stack, environment},
             fn (_, {acc, curr_stack, curr_env}) ->
                 case Stack.pop(curr_stack, curr_env) do
                     nil -> {acc, curr_stack, curr_env}
